// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NHOM5_NET105_SD17305.Data.Data;

#nullable disable

namespace NHOM5_NET105_SD17305.Views.Migrations
{
    [DbContext(typeof(FastFoodDbContext))]
    [Migration("20230611085808_mgsd")]
    partial class mgsd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerUserId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerUserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BillStatusId")
                        .HasColumnType("int");

                    b.Property<int>("BillStatus_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Delivery_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("Payment_TypeId")
                        .HasColumnType("int");

                    b.Property<int>("Payment_Type_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Payment_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecipientAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingFee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillStatusId");

                    b.HasIndex("Payment_TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.BillItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bill_Id")
                        .HasColumnType("int");

                    b.Property<int>("BillsId")
                        .HasColumnType("int");

                    b.Property<int?>("CombosId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillsId");

                    b.HasIndex("CombosId");

                    b.HasIndex("ProductId");

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.BillStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chờ thanh toán"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chờ xác nhận"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Đang giao hàng"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Đã nhận hàng"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hủy đơn"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Trả hàng"
                        });
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CombosId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("CombosId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Combos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CombosName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CombosPrice")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.CombosItem", b =>
                {
                    b.Property<int>("CombosItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CombosItemId"), 1L, 1);

                    b.Property<int>("CombosId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CombosItemId");

                    b.HasIndex("CombosId");

                    b.HasIndex("ProductId");

                    b.ToTable("CombosItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Customer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.ExternalLogin", b =>
                {
                    b.Property<int>("ExternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExternalId"), 1L, 1);

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExternalId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("UserId");

                    b.ToTable("ExternalLogin");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Payment_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payment_Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Khi nhận hàng"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Online"
                        });
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Cate_Id")
                        .HasColumnType("int");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cate_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Create_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromoValue")
                        .HasColumnType("int");

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.PromotionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.ProviderLogin", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"), 1L, 1);

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("ProviderLogin");

                    b.HasData(
                        new
                        {
                            ProviderId = 1,
                            ProviderName = "Google"
                        },
                        new
                        {
                            ProviderId = 2,
                            ProviderName = "Facebook"
                        });
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Address", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Bill", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.BillStatus", "BillStatus")
                        .WithMany("Bills")
                        .HasForeignKey("BillStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Payment_Type", "Payment_Type")
                        .WithMany("bills")
                        .HasForeignKey("Payment_TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillStatus");

                    b.Navigation("Payment_Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.BillItem", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Bill", "Bills")
                        .WithMany("BillItem")
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Combos", "Combos")
                        .WithMany("BillItems")
                        .HasForeignKey("CombosId");

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Product", "Product")
                        .WithMany("billItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Bills");

                    b.Navigation("Combos");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Cart", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.CartItem", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Combos", "Combos")
                        .WithMany("CartItems")
                        .HasForeignKey("CombosId");

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Product", "Product")
                        .WithMany("cartItems")
                        .HasForeignKey("ProductId");

                    b.Navigation("Cart");

                    b.Navigation("Combos");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.CombosItem", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Combos", "Combos")
                        .WithMany("CombosItems")
                        .HasForeignKey("CombosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Product", "Product")
                        .WithMany("CombosItem")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combos");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Customer", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.ExternalLogin", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.ProviderLogin", "Provider")
                        .WithMany("ExternalLogin")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Product", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Cate_Id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.PromotionItem", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Product", "Product")
                        .WithMany("promotionItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.Promotion", "Promotion")
                        .WithMany("promotionItems")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Role", b =>
                {
                    b.HasOne("NHOM5_NET105_SD17305.Data.Models.User", null)
                        .WithMany("Role")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Bill", b =>
                {
                    b.Navigation("BillItem");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.BillStatus", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Combos", b =>
                {
                    b.Navigation("BillItems");

                    b.Navigation("CartItems");

                    b.Navigation("CombosItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Customer", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Payment_Type", b =>
                {
                    b.Navigation("bills");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Product", b =>
                {
                    b.Navigation("CombosItem");

                    b.Navigation("billItems");

                    b.Navigation("cartItems");

                    b.Navigation("promotionItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.Promotion", b =>
                {
                    b.Navigation("promotionItems");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.ProviderLogin", b =>
                {
                    b.Navigation("ExternalLogin");
                });

            modelBuilder.Entity("NHOM5_NET105_SD17305.Data.Models.User", b =>
                {
                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
